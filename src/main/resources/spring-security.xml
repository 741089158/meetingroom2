<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">


   <!-- <security:global-method-security pre-post-annotations="enabled" jsr250-annotations="enabled" secured-annotations="enabled"></security:global-method-security>-->
    <!-- 配置不拦截的资源 -->
    <security:http pattern="/login.jsp" security="none"/>
    <security:http pattern="/failer.jsp" security="none"/>
    <security:http pattern="/1.jsp" security="none"/>
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/fonts/**" security="none"/>
    <security:http pattern="/packages/**" security="none"/>
    <security:http pattern="/image/**" security="none"/>
    <security:http pattern="/js/**" security="none"/>
    <security:http pattern="/vendor/**" security="none"/>
    <security:http pattern="/plugins/**" security="none"/>

    <!--如果声明为true，那么在access属性要用hasRole()这样写：hasAnyRole('ROLE_USER','ROLE_ADMIN')
    如果声明为false（默认），那么access直接就是access="ROLE_USER"
    -->
    <security:http auto-config="false" use-expressions="true">
        <!-- 配置具体的拦截的规则 pattern="请求路径的规则" access="访问系统的人，必须有ROLE_USER的角色" -->
        <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_SYSTEM','ROLE_ADMIN','USER_ROOM','USER_MEETING','USER_DICT','USER_DEPT','USER_USER','USER_MENU','USER_ROLE')"/>
        <!--<access-denied-handler error-page="404"/>-->
        <!-- 定义跳转的具体的页面 -->
        <security:form-login
                login-page="/login.jsp"
                login-processing-url="/login"
                authentication-failure-url="/login.jsp?login=error"
                default-target-url="/page/home.jsp"
        />

        <!-- 关闭跨域请求 -->
        <security:csrf disabled="true"/>

        <!--SAMEORIGIN — 表示该页面可以在相同域名页面的 frame 中展示。-->
        <security:headers><security:frame-options policy="SAMEORIGIN"></security:frame-options></security:headers>

        <!-- 退出 -->
        <security:logout invalidate-session="true" logout-url="/logout" logout-success-url="/login.jsp" />

    </security:http>

    <!-- 切换成数据库中的用户名和密码 -->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="meetUserServiceImpl">
            <!-- 配置加密的方式 -->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="meetUserServiceImpl" class="com.bcsd.service.Impl.MeetUserServiceImpl"></bean>

    <!-- 配置加密类 -->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>


</beans>












